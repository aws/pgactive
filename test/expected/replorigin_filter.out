SELECT * FROM public.pgactive_regress_variables()
\gset
\c :writedb1
SELECT pgactive.pgactive_replicate_ddl_command($DDL$
CREATE TABLE public.origin_filter (
   id integer primary key not null,
   n1 integer not null
);
$DDL$);
 pgactive_replicate_ddl_command 
--------------------------------
 
(1 row)

SELECT pgactive.pgactive_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 pgactive_wait_for_slots_confirmed_flush_lsn 
---------------------------------------------
 
(1 row)

-- Simulate a write from some unknown peer node by defining a replication
-- origin and using it in our session. We must not forward the writes generated
-- after replication origin is setup.
INSERT INTO origin_filter(id, n1) VALUES (1, 1);
SELECT pg_replication_origin_create('demo_origin');
 pg_replication_origin_create 
------------------------------
                            3
(1 row)

SELECT pg_replication_origin_session_is_setup();
 pg_replication_origin_session_is_setup 
----------------------------------------
 f
(1 row)

INSERT INTO origin_filter(id, n1) VALUES (2, 2);
SELECT pg_replication_origin_session_setup('demo_origin');
 pg_replication_origin_session_setup 
-------------------------------------
 
(1 row)

SELECT pg_replication_origin_session_is_setup();
 pg_replication_origin_session_is_setup 
----------------------------------------
 t
(1 row)

INSERT INTO origin_filter(id, n1) VALUES (3, 3);
BEGIN;
SELECT pg_replication_origin_xact_setup('1/1', current_timestamp);
 pg_replication_origin_xact_setup 
----------------------------------
 
(1 row)

INSERT INTO public.origin_filter(id, n1) values (4, 4);
COMMIT;
SELECT pgactive.pgactive_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 pgactive_wait_for_slots_confirmed_flush_lsn 
---------------------------------------------
 
(1 row)

SELECT * FROM origin_filter ORDER BY id;
 id | n1 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
(4 rows)

\c :writedb2
SELECT pg_replication_origin_session_is_setup();
 pg_replication_origin_session_is_setup 
----------------------------------------
 f
(1 row)

SELECT * FROM origin_filter ORDER BY id;
 id | n1 
----+----
  1 |  1
  2 |  2
(2 rows)

\c :writedb1
SELECT pg_replication_origin_session_is_setup();
 pg_replication_origin_session_is_setup 
----------------------------------------
 f
(1 row)

SELECT pgactive.pgactive_replicate_ddl_command($DDL$
    DROP TABLE public.origin_filter;
$DDL$);
 pgactive_replicate_ddl_command 
--------------------------------
 
(1 row)

SELECT pgactive.pgactive_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 pgactive_wait_for_slots_confirmed_flush_lsn 
---------------------------------------------
 
(1 row)

SELECT pg_replication_origin_drop('demo_origin');
 pg_replication_origin_drop 
----------------------------
 
(1 row)

