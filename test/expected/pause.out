\c regression
SELECT pgactive.pgactive_is_apply_paused();
 pgactive_is_apply_paused 
---------------------
 f
(1 row)

SELECT pgactive.pgactive_replicate_ddl_command('CREATE TABLE public.pause_test(x text primary key);');
 pgactive_replicate_ddl_command 
---------------------------
 
(1 row)

INSERT INTO pause_test(x) VALUES ('before pause');
SELECT pgactive.pgactive_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 pgactive_wait_for_slots_confirmed_flush_lsn 
----------------------------------------
 
(1 row)

\c postgres
SELECT pgactive.pgactive_is_apply_paused();
 pgactive_is_apply_paused 
---------------------
 f
(1 row)

SELECT pgactive.pgactive_apply_pause();
 pgactive_apply_pause 
-----------------
 
(1 row)

SELECT pgactive.pgactive_is_apply_paused();
 pgactive_is_apply_paused 
---------------------
 t
(1 row)

-- It's necessary to wait for a latch timeout on apply workers
-- until pgactive_apply_pause gets taught to set their latches.
SELECT pg_sleep(6);
 pg_sleep 
----------
 
(1 row)

\c regression
INSERT INTO pause_test(x) VALUES ('after pause before resume');
\c postgres
-- Give more time for a row to replicate if it's going to
-- (it shouldn't)
SELECT pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

-- Pause state is preserved across sessions
SELECT pgactive.pgactive_is_apply_paused();
 pgactive_is_apply_paused 
---------------------
 t
(1 row)

-- Must not see row from after pause
SELECT x FROM pause_test;
      x       
--------------
 before pause
(1 row)

SELECT pgactive.pgactive_apply_resume();
 pgactive_apply_resume 
------------------
 
(1 row)

\c regression
INSERT INTO pause_test(x) VALUES ('after resume');
-- The pause latch timeout is 5 minutes. To make sure that setting
-- the latch is doing its job and unpausing before timeout, expect
-- resume to take effect well before then.
BEGIN;
SET LOCAL statement_timeout = '60s';
SELECT pgactive.pgactive_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 pgactive_wait_for_slots_confirmed_flush_lsn 
----------------------------------------
 
(1 row)

COMMIT;
\c postgres
-- Must see all three rows
SELECT x FROM pause_test;
             x             
---------------------------
 before pause
 after pause before resume
 after resume
(3 rows)

