\c postgres
CREATE SCHEMA test_schema_1
       CREATE UNIQUE INDEX abc_a_idx ON abc (a)
       CREATE VIEW abc_view AS
              SELECT a+1 AS a, b+1 AS b FROM abc
       CREATE TABLE abc (
              a serial,
              b int UNIQUE
       );
CREATE FUNCTION test_schema_1.abc_func() RETURNS void
       AS $$ BEGIN END; $$ LANGUAGE plpgsql;
SELECT bdr.bdr_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 bdr_wait_for_slots_confirmed_flush_lsn 
----------------------------------------
 
(1 row)

\c regression
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
 count 
-------
     5
(1 row)

INSERT INTO test_schema_1.abc DEFAULT VALUES;
INSERT INTO test_schema_1.abc DEFAULT VALUES;
INSERT INTO test_schema_1.abc DEFAULT VALUES;
SELECT bdr.bdr_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 bdr_wait_for_slots_confirmed_flush_lsn 
----------------------------------------
 
(1 row)

\c postgres
SELECT * FROM test_schema_1.abc;
 a | b 
---+---
 1 |  
 2 |  
 3 |  
(3 rows)

SELECT * FROM test_schema_1.abc_view;
 a | b 
---+---
 2 |  
 3 |  
 4 |  
(3 rows)

ALTER SCHEMA test_schema_1 RENAME TO test_schema_renamed;
SELECT bdr.bdr_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 bdr_wait_for_slots_confirmed_flush_lsn 
----------------------------------------
 
(1 row)

\c regression
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_1');
 count 
-------
     0
(1 row)

CREATE SCHEMA test_schema_renamed; -- fail, already exists
ERROR:  schema "test_schema_renamed" already exists
CREATE SCHEMA IF NOT EXISTS test_schema_renamed; -- ok with notice
NOTICE:  schema "test_schema_renamed" already exists, skipping
DROP SCHEMA test_schema_renamed CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table test_schema_renamed.abc
drop cascades to view test_schema_renamed.abc_view
drop cascades to function test_schema_renamed.abc_func()
SELECT bdr.bdr_wait_for_slots_confirmed_flush_lsn(NULL,NULL);
 bdr_wait_for_slots_confirmed_flush_lsn 
----------------------------------------
 
(1 row)

\c postgres
SELECT COUNT(*) FROM pg_class WHERE relnamespace =
    (SELECT oid FROM pg_namespace WHERE nspname = 'test_schema_renamed');
 count 
-------
     0
(1 row)

